name: Release workflow

on:
    push:
        tags:
            - 'v*'

jobs:
    build:
        name: Build release
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                include:
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
                    - os: macos-latest
                      target: aarch64-apple-darwin
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                toolchain: stable
                target: ${{ matrix.target }}
            
            - name: Build the project
              uses: actions-rs/cargo@v1
              with:
                command: build
                args: --release --target ${{ matrix.target }}
            
            - name: Archive build artifacts
              if: matrix.os == 'windows-latest'
              run: |
                7z a -tzip luir-${{ github.ref_name }}-${{ matrix.target }}.zip LICENSE
                cd target/${{ matrix.target }}/release
                7z a -tzip ../../../luir-${{ github.ref_name }}-${{ matrix.target }}.zip luir.exe
            
            - name: Archive build artifacts
              if: matrix.os == 'ubuntu-latest'
              run: tar -czf luir-${{ github.ref_name }}-${{ matrix.target }}.tar.gz --transform 's/.*\///' target/${{ matrix.target }}/release/luir LICENSE
            
            - name: Archive build artifacts
              if: matrix.os == 'macos-latest'
              run: |
                7z a -tzip luir-${{ github.ref_name }}-${{ matrix.target }}.zip LICENSE
                cd target/${{ matrix.target }}/release
                7z a -tzip ../../../luir-${{ github.ref_name }}-${{ matrix.target }}.zip luir
            
            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                name: build-${{ matrix.os }}
                path: luir-*-${{ matrix.target }}.*
    
    release:
        name: Upload released application
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                pattern: build-*
                merge-multiple: true
            - name: Create release
              uses: softprops/action-gh-release@v1
              with:
                files: |
                    luir-*.tar.gz
                    luir-*.zip
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


